# Generated by Django 5.2.5 on 2025-09-22 01:28

import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('usuario', models.CharField(blank=True, max_length=150, null=True, unique=True, verbose_name='Usuario')),
                ('contrasena', models.CharField(blank=True, max_length=128, verbose_name='Contraseña')),
                ('clave_visible', models.CharField(blank=True, max_length=10, null=True, verbose_name='Clave Visible')),
                ('nacionalidad', models.CharField(blank=True, choices=[('V', 'Venezolano'), ('E', 'Extranjero')], default='V', max_length=1, null=True, verbose_name='Nacionalidad')),
                ('cedula', models.CharField(blank=True, max_length=10, null=True, unique=True, verbose_name='Cédula')),
                ('nombre', models.CharField(blank=True, max_length=50, null=True, verbose_name='Nombre')),
                ('apellido', models.CharField(blank=True, max_length=50, null=True, verbose_name='Apellido')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Correo Electrónico')),
                ('telefono', models.CharField(blank=True, max_length=15, null=True, verbose_name='Teléfono')),
                ('sexo', models.CharField(blank=True, choices=[('M', 'Masculino'), ('F', 'Femenino')], default='Masculino', max_length=1, null=True, verbose_name='Sexo')),
                ('fecha_nacimiento', models.DateField(blank=True, null=True, verbose_name='Fecha de Nacimiento')),
                ('fecha_ingreso', models.DateField(auto_now_add=True, verbose_name='Fecha de Ingreso')),
                ('rol', models.CharField(choices=[('estudiante', 'Estudiante'), ('docente', 'Docente'), ('coordinador', 'Coordinador'), ('personal', 'Personal Administrativo'), ('jefe', 'Jefe de Control de Estudios')], default='estudiante', max_length=20, verbose_name='Rol')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
